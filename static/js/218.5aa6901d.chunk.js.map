{"version":3,"file":"static/js/218.5aa6901d.chunk.js","mappings":"mTAGMA,E,MAAMC,GAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAI,gBAAiB,CAC1CG,OAAQ,CACNG,MAAAA,KAHyB,cACvBC,EADuB,gBAMVA,EAASC,KAAKC,QANJ,cAMvBD,EANuB,OAO7BE,QAAQC,IAAIH,GAPiB,kBAQtBA,GARsB,2CAAH,sDAWfI,EAAW,mCAAG,sGACFZ,EAAI,uBADF,cACnBO,EADmB,gBAENA,EAASC,KAFH,cAEnBA,EAFmB,yBAIlBA,GAJkB,2CAAH,qDAOXK,EAAW,mCAAG,WAAMC,GAAN,yFACFd,EAAI,SAAD,OAAUc,IADX,cACnBP,EADmB,gBAENA,EAASC,KAFH,cAEnBA,EAFmB,yBAIlBA,GAJkB,2CAAH,sDAOXO,EAAO,mCAAG,WAAMD,GAAN,yFACEd,EAAI,SAAD,OAAUc,EAAV,aADL,cACfP,EADe,gBAEFA,EAASC,KAFP,cAEfA,EAFe,yBAIdA,EAAKQ,MAJS,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,yFACDd,EAAI,SAAD,OAAUc,EAAV,aADF,cAClBP,EADkB,gBAELA,EAASC,KAFJ,cAElBA,EAFkB,yBAIjBA,EAAKC,SAJY,2CAAH,qD,+FCvCR,SAASS,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,GACCA,EAAOG,KAAI,SAAAC,GAAE,OACX,yBACE,SAAC,KAAD,CAASC,GAAE,iBAAYD,EAAGT,IAAMW,MAAOL,EAAvC,SACGG,EAAGG,SAFCH,EAAGT,GADD,OAUtB,C,wHCfc,SAASa,EAAT,GAA+C,IAA5BD,EAA2B,EAA3BA,MAAiBP,GAAU,EAApBS,SAAoB,EAAVT,QACjD,OACE,iBAAKU,UAAU,YAAf,UACGH,IAAS,wBAAKA,KAEf,SAACR,EAAA,EAAD,CAAWC,OAAQA,MAGxB,CCRc,SAASW,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRrB,EAAAA,EAAAA,MACGsB,MAAK,SAAAC,GACJH,EAAUG,EAAI1B,QACf,IACA2B,OAAM,SAAAC,GAAK,OAAI3B,QAAQC,IAAI0B,EAAhB,GACf,GAAE,KAEI,SAACV,EAAD,CAASD,MAAM,+FAAoBP,OAAQA,GACnD,C","sources":["api/Api.jsx","components/movieList/MovieList.jsx","components/section/Section.jsx","pages/Home.jsx"],"sourcesContent":["\nimport axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '373fb4f004f8944acdbb048696a20af4',\n  },\n});\n\nexport const getSearchMovies = async query => {\n  const response = await API(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  const data = await response.data.results;\n  console.log(data);\n  return data;\n};\n\nexport const getTrending = async () => {\n  const response = await API(`trending/movie/week`);\n  const data = await response.data;\n  // console.log(data);\n  return data;\n};\n\nexport const getOneMovie = async id => {\n  const response = await API(`movie/${id}`);\n  const data = await response.data;\n  // console.log(data);\n  return data;\n};\n\nexport const getCast = async id => {\n  const response = await API(`movie/${id}/credits`);\n  const data = await response.data;\n  // console.log(data);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const response = await API(`movie/${id}/reviews`);\n  const data = await response.data;\n  // console.log(data);\n  return data.results;\n};\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nexport default function MovieList({ trends }) {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {trends &&\n          trends.map(el => (\n            <li key={el.id}>\n              <NavLink to={`/movie/${el.id}`} state={location}>\n                {el.title}\n              </NavLink>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from '../movieList/MovieList';\n\nexport default function Section({ title, children, trends }) {\n  return (\n    <div className=\"container\">\n      {title && <h1>{title}</h1>}\n      \n      <MovieList trends={trends}></MovieList>\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import { getTrending } from '../api/Api';\nimport { useState, useEffect } from 'react';\nimport Section from '../components/section/Section';\n\nexport default function Home() {\n  const [trends, setTrends] = useState([]);\n\n  useEffect(() => {\n    getTrending()\n      .then(res => {\n        setTrends(res.results);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  return <Section title=\"У тренді сьогодні\" trends={trends} />;\n}\n"],"names":["API","axios","baseURL","params","api_key","getSearchMovies","query","response","data","results","console","log","getTrending","getOneMovie","id","getCast","cast","getReviews","MovieList","trends","location","useLocation","map","el","to","state","title","Section","children","className","Home","useState","setTrends","useEffect","then","res","catch","error"],"sourceRoot":""}