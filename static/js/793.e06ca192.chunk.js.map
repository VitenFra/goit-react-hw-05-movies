{"version":3,"file":"static/js/793.e06ca192.chunk.js","mappings":"mTAGMA,E,MAAMC,GAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAI,gBAAiB,CAC1CG,OAAQ,CACNG,MAAAA,KAHyB,cACvBC,EADuB,gBAMVA,EAASC,KAAKC,QANJ,cAMvBD,EANuB,OAO7BE,QAAQC,IAAIH,GAPiB,kBAQtBA,GARsB,2CAAH,sDAWfI,EAAW,mCAAG,sGACFZ,EAAI,uBADF,cACnBO,EADmB,gBAENA,EAASC,KAFH,cAEnBA,EAFmB,yBAIlBA,GAJkB,2CAAH,qDAOXK,EAAW,mCAAG,WAAMC,GAAN,yFACFd,EAAI,SAAD,OAAUc,IADX,cACnBP,EADmB,gBAENA,EAASC,KAFH,cAEnBA,EAFmB,yBAIlBA,GAJkB,2CAAH,sDAOXO,EAAO,mCAAG,WAAMD,GAAN,yFACEd,EAAI,SAAD,OAAUc,EAAV,aADL,cACfP,EADe,gBAEFA,EAASC,KAFP,cAEfA,EAFe,yBAIdA,EAAKQ,MAJS,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,yFACDd,EAAI,SAAD,OAAUc,EAAV,aADF,cAClBP,EADkB,gBAELA,EAASC,KAFJ,cAElBA,EAFkB,yBAIjBA,EAAKC,SAJY,2CAAH,qD,+GCxCVS,EAAmB,SAAAC,GAAM,OACpCA,GAAUA,EAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,KADL,E,UCDtC,EAAyB,0B,SCMV,SAASC,EAAT,GAAmC,IFPbC,EEODC,EAAa,EAAbA,UAC1BC,EACND,EADMC,YAAaC,EACnBF,EADmBE,aAAcC,EACjCH,EADiCG,SAAUC,EAC3CJ,EAD2CI,MAAOC,EAClDL,EADkDK,aAAcZ,EAChEO,EADgEP,OAE5Da,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAsC,GAAfR,GAAmBS,QAAQ,GAExD,OACE,iCACE,mBACEC,UAAWC,EACXC,QAAS,wBAAMN,EAAQ,UAACF,EAASS,aAAV,QAAmB,IAAjC,EAFX,6CAMA,4BACE,gBACEC,IACEf,EAAW,0CAC4BA,GACnCgB,EAENC,IAAG,UAAKd,MAEV,4BACE,kCAAQA,EAAR,cFjC2BL,EEiCaM,EFjCLN,GAAQA,EAAKoB,MAAM,KAAK,IEiC3D,QACA,0BACE,2CADF,IAC6BT,EAD7B,QAGA,0BACE,yCADF,IAC2BP,MAE3B,0BACE,qCADF,IACuBX,EAAiBC,cAMjD,C,aC5Cc,SAAS2B,IACtB,IAAMd,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,iJACA,2BACE,yBACE,SAAC,KAAD,CAASc,GAAG,OAAON,MAAOT,EAASS,MAAnC,uGAIF,yBACE,SAAC,KAAD,CAASM,GAAG,UAAUN,MAAOT,EAASS,MAAtC,+DAOT,C,cChBc,SAASO,IACtB,IAAQlC,GAAOmC,EAAAA,EAAAA,MAAPnC,GACR,GAA0BoC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRxC,EAAAA,EAAAA,IAAYC,GACTwC,MAAK,SAAAC,GACJH,EAASG,EACV,IACAC,OAAM,SAAAC,GAAK,OAAI/C,QAAQC,IAAI8C,EAAhB,GAEf,GAAE,CAAC3C,KAGF,+BACGqC,IAAS,SAAC3B,EAAD,CAAWE,UAAWyB,IAC/BA,IAAS,SAACL,EAAD,KAEV,SAAC,EAAAY,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/Api.jsx","helper/Helper.js","webpack://react-homework-template/./src/components/movieInfo/MovieInfo.module.css?04ed","components/movieInfo/MovieInfo.jsx","components/movieAdditionalInfo/MovieAdditionalInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n  params: {\r\n    api_key: '373fb4f004f8944acdbb048696a20af4',\r\n  },\r\n});\r\n\r\nexport const getSearchMovies = async query => {\r\n  const response = await API(`/search/movie`, {\r\n    params: {\r\n      query,\r\n    },\r\n  });\r\n  const data = await response.data.results;\r\n  console.log(data);\r\n  return data;\r\n};\r\n\r\nexport const getTrending = async () => {\r\n  const response = await API(`trending/movie/week`);\r\n  const data = await response.data;\r\n  // console.log(data);\r\n  return data;\r\n};\r\n\r\nexport const getOneMovie = async id => {\r\n  const response = await API(`movie/${id}`);\r\n  const data = await response.data;\r\n  // console.log(data);\r\n  return data;\r\n};\r\n\r\nexport const getCast = async id => {\r\n  const response = await API(`movie/${id}/credits`);\r\n  const data = await response.data;\r\n  // console.log(data);\r\n  return data.cast;\r\n};\r\n\r\nexport const getReviews = async id => {\r\n  const response = await API(`movie/${id}/reviews`);\r\n  const data = await response.data;\r\n  // console.log(data);\r\n  return data.results;\r\n};\r\n","export const normalizedYearOfMovie = date => date && date.split('-')[0];\r\n\r\nexport const normolizedGenres = genres =>\r\n  genres && genres.map(el => el.name).join(', ');\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieInfo_button__cDPcz\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { normalizedYearOfMovie, normolizedGenres } from '../../helper/Helper';\r\nimport placeholder from '../../images/posterholder.jpg';\r\nimport s from './MovieInfo.module.css';\r\n\r\nexport default function MovieInfo({ movieInfo }) {\r\n  const { poster_path, vote_average, overview, title, release_date, genres } =\r\n    movieInfo;\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const normalizedUserScore = (vote_average * 10).toFixed(0);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={s.button}\r\n        onClick={() => navigate(location.state ?? '/')}\r\n      >\r\n        Назад\r\n      </button>\r\n      <div>\r\n        <img\r\n          src={\r\n            poster_path\r\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\r\n              : placeholder\r\n          }\r\n          alt={`${title}`}\r\n        />\r\n        <div>\r\n          <h2>{`${title} (${normalizedYearOfMovie(release_date)})`}</h2>\r\n          <p>\r\n            <span>User score: </span> {normalizedUserScore}%\r\n          </p>\r\n          <p>\r\n            <span>Overview: </span> {overview}\r\n          </p>\r\n          <p>\r\n            <span>Genes:</span> {normolizedGenres(genres)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nMovieInfo.propTypes = {\r\n  info: PropTypes.shape({\r\n    overview: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n    genres: PropTypes.array.isRequired,\r\n    poster_path: PropTypes.string.isRequired,\r\n    release_date: PropTypes.string.isRequired,\r\n    original_title: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","import React from 'react';\r\nimport { useLocation, NavLink } from 'react-router-dom';\r\n\r\nexport default function MovieAdditionalInfo() {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div>\r\n      <h3>Додаткова інформація</h3>\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"cast\" state={location.state}>\r\n          Aкторський склад\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"reviews\" state={location.state}>\r\n          Відгуки\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, Suspense } from 'react';\r\nimport { useParams, Outlet } from 'react-router-dom';\r\nimport { getOneMovie } from '../api/Api';\r\nimport MovieInfo from 'components/movieInfo/MovieInfo';\r\nimport MovieAdditionalInfo from 'components/movieAdditionalInfo/MovieAdditionalInfo';\r\nimport Loader from 'components/loader/Loader';\r\n\r\nexport default function MovieDetails() {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState({});\r\n\r\n  useEffect(() => {\r\n    getOneMovie(id)\r\n      .then(res => {\r\n        setMovie(res);\r\n      })\r\n      .catch(error => console.log(error));\r\n \r\n  }, [id]);\r\n\r\n  return (\r\n    <section>\r\n      {movie && <MovieInfo movieInfo={movie} />}\r\n      {movie && <MovieAdditionalInfo />}\r\n\r\n      <Suspense fallback={<Loader />}>\r\n        <Outlet />\r\n      </Suspense>\r\n    </section>\r\n  );\r\n}\r\n"],"names":["API","axios","baseURL","params","api_key","getSearchMovies","query","response","data","results","console","log","getTrending","getOneMovie","id","getCast","cast","getReviews","normolizedGenres","genres","map","el","name","join","MovieInfo","date","movieInfo","poster_path","vote_average","overview","title","release_date","location","useLocation","navigate","useNavigate","normalizedUserScore","toFixed","className","s","onClick","state","src","placeholder","alt","split","MovieAdditionalInfo","to","MovieDetails","useParams","useState","movie","setMovie","useEffect","then","res","catch","error","Suspense","fallback","Loader"],"sourceRoot":""}